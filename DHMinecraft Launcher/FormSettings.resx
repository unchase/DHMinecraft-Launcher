<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAgBAAABMLAAATCwAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA7dgz/O3YM/zt2DP87dgz/O3YM/zt2
        DP87dgz/O3YM/zt2DP87dgz/O3YM/zt2DP87dgz/O3YM/zt2DP87dgz/O3YM/zt2DP8AAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAO3YM/zt2DP9IjxD/SI8Q/0iP
        EP9IjxD/SI8Q/0iPEP9IjxD/SI8Q/0iPEP9IjxD/SI8Q/0iPEP9IjxD/SI8Q/0iPEP9IjxD/O3YM/zt2
        DP8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADt2DP87dgz/SI8Q/0iP
        EP9IjxD/SI8Q/0iPEP9IjxD/SI8Q/0iPEP9IjxD/SI8Q/0iPEP9IjxD/SI8Q/0iPEP9IjxD/SI8Q/0iP
        EP9IjxD/O3YM/zt2DP8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA7dgz/O3YM/0iP
        EP9IjxD/SI8Q/2C4G/9guBv/YLgb/2C4G/9guBv/YLgb/2C4G/9guBv/YLgb/2C4G/9guBv/YLgb/2C4
        G/9guBv/SI8Q/0iPEP9IjxD/O3YM/zt2DP8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAO3YM/zt2
        DP9IjxD/SI8Q/0iPEP9guBv/YLgb/26XFf9ulxX/bpcV/26XFf9ulxX/bpcV/26XFf9ulxX/bpcV/26X
        Ff9ulxX/bpcV/2C4G/9guBv/SI8Q/0iPEP9IjxD/O3YM/zt2DP8AAAAAAAAAAAAAAAAAAAAAAAAAADt2
        DP87dgz/SI8Q/0iPEP9IjxD/YLgb/2C4G/9ulxX/bpcV/26XFf9ulxX/bpcV/26XFf9ulxX/bpcV/26X
        Ff9ulxX/bpcV/26XFf9ulxX/bpcV/2C4G/9guBv/SI8Q/0iPEP9IjxD/O3YM/zt2DP8AAAAAAAAAAAAA
        AAA7dgz/O3YM/0iPEP9IjxD/SI8Q/2C4G/9guBv/bpcV/26XFf9ulxX/bpcV/26XFf9ulxX/bpcV/26X
        Ff9ulxX/bpcV/26XFf9ulxX/bpcV/26XFf9ulxX/bpcV/2C4G/9guBv/SI8Q/0iPEP9IjxD/O3YM/zt2
        DP8AAAAAAAAAADt2DP9IjxD/SI8Q/0iPEP9guBv/YLgb/26XFf9ulxX/bpcV/26XFf9ulxX/bpcV/26X
        Ff9ulxX/bpcV/26XFf9ulxX/bpcV/26XFf9ulxX/bpcV/26XFf9ulxX/bpcV/2C4G/9guBv/SI8Q/0iP
        EP9IjxD/O3YM/wAAAAAAAAAAO3YM/0iPEP9IjxD/YLgb/2C4G/9ulxX/bpcV/26XFf9ulxX/bpcV/26X
        Ff9ulxX/bpcV/26XFf9ulxX/bpcV/26XFf9ulxX/bpcV/26XFf9ulxX/bpcV/26XFf9ulxX/bpcV/2C4
        G/9guBv/SI8Q/0iPEP87dgz/AAAAAAAAAAA7dgz/SI8Q/0iPEP9guBv/bpcV/26XFf82FZ//NhWf/26X
        Ff8tG2n/bpcV/zYVn/9ulxX/LRtp/26XFf82FZ//bpcV/y0baf9ulxX/bpcV/26XFf9ulxX/NhWf/26X
        Ff9ulxX/bpcV/2C4G/9IjxD/SI8Q/zt2DP8AAAAAAAAAADt2DP9IjxD/SI8Q/2C4G/9ulxX/LRtp/26X
        Ff9ulxX/bpcV/y0baf82FZ//bpcV/26XFf8tG2n/NhWf/zYVn/9ulxX/LRtp/zYVn/9ulxX/bpcV/26X
        Ff82FZ//bpcV/26XFf9ulxX/YLgb/0iPEP9IjxD/O3YM/wAAAAAAAAAAO3YM/0iPEP9IjxD/YLgb/26X
        Ff8tG2n/bpcV/26XFf9ulxX/LRtp/26XFf8zFo//bpcV/y0baf9ulxX/NhWf/26XFf8tG2n/bpcV/26X
        Ff9ulxX/bpcV/zYVn/9ulxX/bpcV/26XFf9guBv/SI8Q/0iPEP87dgz/AAAAAAAAAAA7dgz/SI8Q/0iP
        EP9guBv/bpcV/y0baf9ulxX/bpcV/26XFf9ulxX/NhWf/26XFf9ulxX/bpcV/zYVn/9ulxX/bpcV/y0b
        af82FZ//NhWf/26XFf8tG2n/NhWf/zYVn/9ulxX/bpcV/2C4G/9IjxD/SI8Q/zt2DP8AAAAAAAAAADt2
        DP9IjxD/SI8Q/2C4G/9ulxX/bpcV/zYVn/82FZ//bpcV/26XFf9ulxX/bpcV/26XFf9ulxX/bpcV/26X
        Ff9ulxX/bpcV/26XFf9ulxX/bpcV/26XFf9ulxX/bpcV/26XFf9ulxX/YLgb/0iPEP9IjxD/O3YM/wAA
        AAAAAAAAO3YM/0iPEP9IjxD/YLgb/26XFf9ulxX/bpcV/26XFf9ulxX/bpcV/26XFf9ulxX/bpcV/26X
        Ff9ulxX/bpcV/26XFf9ulxX/bpcV/26XFf9ulxX/bpcV/26XFf9ulxX/bpcV/26XFf9guBv/SI8Q/0iP
        EP87dgz/AAAAAAAAAAA7dgz/SI8Q/0iPEP9guBv/bpcV/26XFf9ulxX/bpcV/26XFf8pB5b/Pgfy/z4H
        8v9ulxX/bpcV/26XFf8pB5b/Pgfy/26XFf9ulxX/KQeW/z4H8v9ulxX/bpcV/26XFf9ulxX/bpcV/2C4
        G/9IjxD/SI8Q/zt2DP8AAAAAAAAAADt2DP9IjxD/SI8Q/2C4G/9ulxX/bpcV/26XFf9ulxX/bpcV/ykH
        lv8+B/L/Pgfy/z4H8v9ulxX/bpcV/ykHlv8+B/L/bpcV/26XFf8pB5b/Pgfy/26XFf9ulxX/bpcV/26X
        Ff9ulxX/YLgb/0iPEP9IjxD/O3YM/wAAAAAAAAAAO3YM/0iPEP9IjxD/YLgb/26XFf9ulxX/bpcV/26X
        Ff9ulxX/KQeW/z4H8v9ulxX/KQeW/z4H8v9ulxX/KQeW/z4H8v9ulxX/bpcV/ykHlv8+B/L/bpcV/26X
        Ff9ulxX/bpcV/26XFf9guBv/SI8Q/0iPEP87dgz/AAAAAAAAAAA7dgz/SI8Q/0iPEP9guBv/bpcV/26X
        Ff9ulxX/bpcV/26XFf8pB5b/Pgfy/26XFf8pB5b/Pgfy/26XFf8pB5b/Pgfy/z4H8v8+B/L/Pgfy/z4H
        8v9ulxX/bpcV/26XFf9ulxX/bpcV/2C4G/9IjxD/SI8Q/zt2DP8AAAAAAAAAADt2DP9IjxD/SI8Q/2C4
        G/9ulxX/bpcV/26XFf9ulxX/bpcV/ykHlv8+B/L/bpcV/ykHlv8+B/L/bpcV/ykHlv8+B/L/Pgfy/z4H
        8v8+B/L/Pgfy/26XFf9ulxX/bpcV/26XFf9ulxX/YLgb/0iPEP9IjxD/O3YM/wAAAAAAAAAAO3YM/0iP
        EP9IjxD/YLgb/26XFf9ulxX/bpcV/26XFf9ulxX/KQeW/z4H8v9ulxX/KQeW/z4H8v9ulxX/KQeW/z4H
        8v9ulxX/bpcV/ykHlv8+B/L/bpcV/26XFf9ulxX/bpcV/26XFf9guBv/SI8Q/0iPEP87dgz/AAAAAAAA
        AAA7dgz/SI8Q/0iPEP9guBv/YLgb/26XFf9ulxX/bpcV/26XFf8pB5b/Pgfy/26XFf8pB5b/Pgfy/26X
        Ff8pB5b/Pgfy/26XFf9ulxX/KQeW/z4H8v9ulxX/bpcV/26XFf9ulxX/YLgb/2C4G/9IjxD/SI8Q/zt2
        DP8AAAAAAAAAADt2DP9IjxD/SI8Q/0iPEP9guBv/YLgb/26XFf9ulxX/bpcV/ykHlv8+B/L/Pgfy/z4H
        8v9ulxX/bpcV/ykHlv8+B/L/bpcV/26XFf8pB5b/Pgfy/26XFf9ulxX/bpcV/2C4G/9guBv/SI8Q/0iP
        EP9IjxD/O3YM/wAAAAAAAAAAO3YM/zt2DP9IjxD/SI8Q/0iPEP9guBv/YLgb/26XFf9ulxX/KQeW/z4H
        8v8+B/L/bpcV/26XFf9ulxX/KQeW/z4H8v9ulxX/bpcV/ykHlv8+B/L/bpcV/26XFf9guBv/YLgb/0iP
        EP9IjxD/SI8Q/zt2DP87dgz/AAAAAAAAAAAAAAAAO3YM/zt2DP9IjxD/SI8Q/0iPEP9guBv/YLgb/26X
        Ff9ulxX/bpcV/26XFf9ulxX/bpcV/26XFf9ulxX/bpcV/26XFf9ulxX/bpcV/26XFf9ulxX/YLgb/2C4
        G/9IjxD/SI8Q/0iPEP87dgz/O3YM/wAAAAAAAAAAAAAAAAAAAAAAAAAAO3YM/zt2DP9IjxD/SI8Q/0iP
        EP9guBv/YLgb/26XFf9ulxX/bpcV/26XFf9ulxX/bpcV/26XFf9ulxX/bpcV/26XFf9ulxX/bpcV/2C4
        G/9guBv/SI8Q/0iPEP9IjxD/O3YM/zt2DP8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAO3YM/zt2
        DP9IjxD/SI8Q/0iPEP9guBv/YLgb/2C4G/9guBv/YLgb/2C4G/9guBv/YLgb/2C4G/9guBv/YLgb/2C4
        G/9guBv/YLgb/0iPEP9IjxD/SI8Q/zt2DP87dgz/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAO3YM/zt2DP9IjxD/SI8Q/0iPEP9IjxD/SI8Q/0iPEP9IjxD/SI8Q/0iPEP9IjxD/SI8Q/0iP
        EP9IjxD/SI8Q/0iPEP9IjxD/SI8Q/0iPEP87dgz/O3YM/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAO3YM/zt2DP9IjxD/SI8Q/0iPEP9IjxD/SI8Q/0iPEP9IjxD/SI8Q/0iP
        EP9IjxD/SI8Q/0iPEP9IjxD/SI8Q/0iPEP9IjxD/O3YM/zt2DP8AAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAO3YM/zt2DP87dgz/O3YM/zt2DP87dgz/O3YM/zt2
        DP87dgz/O3YM/zt2DP87dgz/O3YM/zt2DP87dgz/O3YM/zt2DP87dgz/AAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA//////4AAH/8AAA/+AAAH/AAAA/gAAAHwAAAA4AAAAGAAAABgAAAAYAA
        AAGAAAABgAAAAYAAAAGAAAABgAAAAYAAAAGAAAABgAAAAYAAAAGAAAABgAAAAYAAAAGAAAABgAAAAcAA
        AAPgAAAH8AAAD/gAAB/8AAA//gAAf/////8=
</value>
  </data>
</root>